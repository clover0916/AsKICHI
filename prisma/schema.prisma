// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum Role {
  ADMIN
  TEACHER
  STUDENT
}

model User {
  id             String     @id @default(cuid())
  name           String?
  email          String?    @unique
  hashedPassword String
  image          String?
  role           Role       @default(STUDENT)
  accounts       Account[]
  sessions       Session[]
  activities     Activity[]
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Activity {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  event     Events   @relation(fields: [eventId], references: [id])
  eventId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Events {
  id        String     @id @unique
  host      String
  title     String
  place     String
  floor     String
  crowded   Int
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Activity  Activity[]
}
